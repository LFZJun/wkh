{"version":3,"file":"router.js","sourceRoot":"","sources":["router.ts"],"names":[],"mappings":";;;;;;;;AAEA,cAAoB,GAAY;;QAC5B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;CAAA;AAED,MAAM;IAUF,YAAY,WAAsB,EAAE,EAAE,SAA+B,EAAE,EAAE,sBAA8B,CAAC;QACpG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IACnD,CAAC;IAEK,IAAI;;YACN,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;KAAA;IAED,YAAY,CAAC,CAAS;QAClB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAA;QACnC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IACxC,CAAC;CACJ;AAED,MAAM;IAGF,YAAY,WAAsB,EAAE;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,GAAG,QAAmB;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IACpC,CAAC;CACJ;AAED,MAAM;IAIF,YAAY,aAAwB,EAAE,EAAE,SAAiC,EAAE;QACvE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,GAAG,CAAC,GAAG,QAAmB;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,GAAG,QAAmB;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEK,KAAK,CAAC,GAAW,EAAE,GAAY;;YACjC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAA;YACV,CAAC;YACD,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvD,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;QACnB,CAAC;KAAA;IAED,GAAG;QACC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAChC,CAAC,OAAY,EAAE,MAAW,EAAE,YAAqC,EAAE,EAAE;YACjE,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;YAC5B,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;gBACnC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;YAClC,CAAC,EAAE,UAAU,GAAG;gBACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;IACN,CAAC;CACJ","sourcesContent":["export type Handler = ((ctx: Context) => Promise)\n\nasync function Next(ctx: Context) {\n    let handlers = ctx.handlers;\n    let n = ctx.handlerIndex(-1) + 1;\n    if (n < handlers.length) {\n        ctx.handlerIndex(n);\n        await handlers[n](ctx);\n    }\n}\n\nexport class Context {\n    request: { path: string, [key: string]: any };\n    sender: any;\n    response: any;\n\n    handlers: Handler[];\n    values: { [key: string]: any };\n    currentHandlerIndex: number;\n\n\n    constructor(handlers: Handler[] = [], values: { [p: string]: any } = {}, currentHandlerIndex: number = 0) {\n        this.handlers = handlers;\n        this.values = values;\n        this.currentHandlerIndex = currentHandlerIndex;\n    }\n\n    async next() {\n        await Next(this);\n    }\n\n    handlerIndex(n: number): number {\n        if (n < 0 || n > this.handlers.length - 1) {\n            return this.currentHandlerIndex\n        }\n\n        return this.currentHandlerIndex = n;\n    }\n}\n\nexport class Route {\n    handlers: Handler[];\n\n    constructor(handlers: Handler[] = []) {\n        this.handlers = handlers;\n    }\n\n    join(...handlers: Handler[]) {\n        this.handlers.push(...handlers);\n    }\n}\n\nexport class Router {\n    middleware: Handler[];\n    routes: { [key: string]: Route };\n\n    constructor(middleware: Handler[] = [], routes: { [p: string]: Route } = {}) {\n        this.middleware = middleware;\n        this.routes = routes;\n    }\n\n    use(...handlers: Handler[]) {\n        this.middleware.push(...handlers);\n    }\n\n    handle(key: string, ...handlers: Handler[]) {\n        if (this.routes[key] == null) {\n            this.routes[key] = new Route([...handlers]);\n        }\n        this.routes[key].join(...handlers);\n    }\n\n    async serve(key: string, ctx: Context) {\n        let route = this.routes[key];\n        if (route == null) {\n            return\n        }\n        ctx.handlers = [...this.middleware, ...route.handlers];\n        await Next(ctx)\n    }\n\n    run() {\n        chrome.runtime.onMessage.addListener(\n            (request: any, sender: any, sendResponse: (response: any) => void) => {\n                let context = new Context();\n                context.request = request;\n                context.sender = sender;\n                context.response = {};\n                this.serve(request.path, context).then(function () {\n                    sendResponse(context.response)\n                }, function (err) {\n                    console.log(err);\n                });\n            }\n        );\n    }\n}"]}